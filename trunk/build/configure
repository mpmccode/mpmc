#!/bin/sh

if [ $# != 6 ]
then
	echo "usage: $0 <hostname> <compiler> <serial | parallel> <CUDA: yes|no> <QM Rotation: yes|no> <Coupled-Dipole VDW: yes|no>"
	echo "     hostnames: generic gdb circe ranger lincoln llnl bigben galactic dirac lonestar spin time"
	echo "     compilers: gcc pgi icc"
	exit 1
fi


HOSTNAME=$1
COMPILER=$2
MODE=$3
CUDA=$4
QM_ROTATION=$5
VDW=$6

NVCC="nvcc"


## Check for machine and compiler. Set CC/CFLAGS/LIBS.
case "$HOSTNAME" in
	"llnl")
		case "$COMPILER" in
			"pgi")
				CC="pgcc"
				CFLAGS="-O3 -fastsse -DACML_NOUNDERSCORE"
				EXTRA_LIBS="-rpath /opt/pgi-7.2.5/libso -L/usr/local/tools/acml-pgi/lib -lpgc -lacml -lacml_mv -lpgftnrtl -lrt -lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
			;;
		esac
	;;
	"lincoln")
		case "$COMPILER" in
			"pgi")
				CC="pgcc"
				CFLAGS="-O3 -fastsse -DACML_NOUNDERSCORE"
				EXTRA_LIBS="-lpgc -lpgftnrtl -lrt -lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
			;;
		esac
	;;
	"bigben")
		case "$COMPILER" in
			"pgi")
				CC="cc"
				CFLAGS="-O3 -fastsse -Mnontemporal -Mprefetch=distance:8,nta"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
			;;
		esac
	;;
	"circe") #USF research computing
		case "$COMPILER" in
			"gcc")

				CC="gcc"
				CFLAGS="-O3 -std=c99"
				EXTRA_LIBS="-L./lib/ -lacml -lacml_mv -lacml_mp -lpgmp -lpgftnrtl -lrt -lm"
				ln -s /usr/lib64/liblapack.so.3 ./lib/liblapack.a
				ln -s /usr/lib64/libg2c.so.0 ./lib/libg2c.a
				ln -s /usr/lib64/libblas.so.3 ./lib/libblas.a
			;;
			"pgi")
				CC="pgcc"
				CFLAGS="-O3 -fastsse -Mipa=fast,inline,libinline,safe"
				EXTRA_LIBS="-L./lib/ -lacml -lacml_mv -lacml_mp -lpgmp -lpgftnrtl -lm"
				ln -s /usr/lib64/liblapack.so.3 ./lib/liblapack.a
				ln -s /usr/lib64/libg2c.so.0 ./lib/libg2c.a
				ln -s /usr/lib64/libblas.so.3 ./lib/libblas.a
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"dirac") #dirac.cas.usf.edu
		case "$COMPILER" in
			"gcc")
				CC="gcc"
				CFLAGS="-O3 -std=c99"
				EXTRA_LIBS="-L/usr/local/pgi/linux86-64/7.0-6/libso/ -lacml -lacml_mv -lacml_mp -lpgmp -lpgftnrtl -lrt -lm"
			;;
			"pgi")
				CC="pgcc"
				CFLAGS="-O3 -fastsse -Mipa=fast,inline,libinline"
				EXTRA_LIBS="-L/usr/local/pgi/linux86-64/7.0-6/libso/ -lacml -lacml_mv -lacml_mp -lpgmp -lpgftnrtl -lrt -lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"time") #time.cas.usf.edu
		case "$COMPILER" in
			"gcc")
				CC="gcc"
				CFLAGS="-O3"
				EXTRA_LIBS="-lm"
			;;
			"pgi")
				CC="pgcc"
				CFLAGS="-O3 -fastsse -Mipa=fast,inline,libinline"
				EXTRA_LIBS="-L/usr/local/pgi/linux86-64/7.0-6/libso/ -lacml -lacml_mv -lacml_mp -lpgmp -lpgftnrtl -lrt -lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"galactic")
		case "$COMPILER" in
			"icc")
				CC="icc"
				CFLAGS="-O3 -prefetch -mp -axP -ip -unroll"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"lonestar") #TACC
		case "$COMPILER" in
			"gcc")
				echo "error: compiler $COMPILER not supported for hostname $HOSTNAME"
				exit 1
			;;
			"pgi")
				echo "error: compiler $COMPILER not supported for hostname $HOSTNAME"
				exit 1
			;;
			"icc")
				CC="icc"
				CFLAGS="-O3 -prefetch -mp -ip -unroll"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"ranger") #TACC
		case "$COMPILER" in
			"pgi")
				CC="pgcc"
				CFLAGS="-O3 -tp barcelona-64"
				EXTRA_LIBS="-lacml -lacml_mv -lacml_mp -lpgmp -lpgftnrtl -lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"spin") #spin.cas.usf.edu
		case "$COMPILER" in
			"gcc")
				CC="gcc"
				CFLAGS="-g0 -O3"
				EXTRA_LIBS="-lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"generic")
		case "$COMPILER" in
			"gcc")
				CC="gcc"
				CFLAGS="-g0 -O3"
				EXTRA_LIBS="-lm"
			;;
			"pgi")
				CC="pgcc"
				CFLAGS="-g0 -O3 -fastsse -Mipa=fast,inline,libinline"
				EXTRA_LIBS="-lm"
			;;
			"icc")
				CC="icc"
				CFLAGS="-O3 -prefetch -mp -axN -ip -unroll"
				EXTRA_LIBS="-lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;
	"gdb") ##debug in gdb
		case "$COMPILER" in
			"gcc")
				CC="gcc"
				CFLAGS="-g"
				EXTRA_LIBS="-lm"
			;;
			*)
				echo "error: compiler $COMPILER not supported for machine $HOSTNAME"
				exit 1
		esac
	;;	*) ## no machine match
		echo "error: unknown machine $HOSTNAME"
		exit 1
	;;
esac

## Serial/Parallel compilation
case "$MODE" in
	"serial")
		DEFINES="$DEFINES"
	;;
	"parallel")
		DEFINES="$DEFINES -DMPI"
		# handle special cases for parallelization
		case "$HOSTNAME" in
			"bigben")
				CC="cc"
			;;
			"dirac")
				EXTRA_INCLUDES="$EXTRA_INCLUDES -I/usr/include/openmpi/1.2.3-gcc"
				EXTRA_LIBS="$EXTRA_LIBS -L/usr/lib64/openmpi/1.2.3-gcc -lmpi -lm"
			;;
			"time")
				EXTRA_INCLUDES="-I/usr/include/openmpi/1.2.3-gcc"
				EXTRA_LIBS="-L/usr/lib64/openmpi/1.2.3-gcc -lmpi -lm"
			;;
			"spin")
				EXTRA_INCLUDES="-I/usr/include/openmpi"
				EXTRA_LIBS="-L/usr/lib64/openmpi -lmpi -lm"
			;;
			*)
				CC="mpicc"
			;;
		esac
	;;
	*)
		echo "error: unknown mode, must be serial or parallel"
		exit 1
	;;
esac

if [ $QM_ROTATION = "yes" ]
then
	DEFINES="$DEFINES -DQM_ROTATION"
fi

if [ $VDW = "yes" ]; then
	DEFINES="$DEFINES -DVDW"
	EXTRA_LIBS="$EXTRA_LIBS -llapack"
fi

if [ $CUDA = "yes" ]; then

	if [ $HOSTNAME = "circe" ]; then
		DEFINES="$DEFINES -DCUDA"
		EXTRA_INCLUDES="$EXTRA_INCLUDES -I/opt/apps/cuda/3.0/include"
		EXTRA_LIBS="$EXTRA_LIBS -L/opt/apps/cuda/3.0/lib64 -lcudart"
	elif [ $HOSTNAME == "llnl" ]; then
		DEFINES="$DEFINES -DCUDA"
		EXTRA_INCLUDES="$EXTRA_INCLUDES -I/opt/cudatoolkit-3.0/include"
		EXTRA_LIBS="$EXTRA_LIBS -L/opt/cudatoolkit-3.0/lib64 -lcudart"
	elif [ $HOSTNAME == "lincoln" ]; then
		DEFINES="$DEFINES -DCUDA"
		EXTRA_INCLUDES="$EXTRA_INCLUDES -I/usr/local/cuda-3.0/include"
		EXTRA_LIBS="$EXTRA_LIBS -L/usr/local/cuda-3.0/lib64 -lcudart"
	else
		DEFINES="$DEFINES -DCUDA"
		EXTRA_LIBS="$EXTRA_LIBS -lcudart"
	fi
fi

## Set CUDA flag
if [ $CUDA = "yes" ]; then
	NVCC=$NVCC
else
	NVCC=
fi

## Libs for gcc need to be specified in a different position
if [ $COMPILER = "gcc" ]; then
	GCC_EXTRA_LIBS=$EXTRA_LIBS
	EXTRA_LIBS=
else
	GCC_EXTRA_LIBS=
	EXTRA_LIBS=$EXTRA_LIBS
fi

cat > Makefile << EOF

#HOSTNAME=$HOSTNAME COMPILER=$COMPILER MODE=$MODE CUDA=$CUDA QM_ROTATION=$QM_ROTATION" 
CC=$CC
CFLAGS=$CFLAGS

DEFINES=$DEFINES
EXTRA_INCLUDES=$EXTRA_INCLUDES
EXTRA_LIBS=$EXTRA_LIBS
GCC_EXTRA_LIBS=$GCC_EXTRA_LIBS
CUDA=$CUDA
QM_ROTATION=$QM_ROTATION

NVCC=$NVCC

include Makefile.common

EOF

